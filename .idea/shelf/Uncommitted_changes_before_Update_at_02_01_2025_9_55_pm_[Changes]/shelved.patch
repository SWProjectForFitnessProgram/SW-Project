Index: src/main/java/org/example/Instructor.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\n//import jakarta.persistence.Entity;\r\n//import jakarta.persistence.EnumType;\r\n//import jakarta.persistence.Enumerated;\r\n//import jakarta.persistence.GeneratedValue;\r\n//import jakarta.persistence.GenerationType;\r\n//import jakarta.persistence.Column;\r\n//\r\n//\r\n////import org.springframework.data.annotation.Id;\r\n//import org.springframework.stereotype.Service;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\n//@Entity\r\npublic class Instructor {\r\n    String name;\r\n    boolean LoggedIn;\r\n    private List<Program> programs;\r\n    int Age;\r\n//    boolean approved;\r\n    private Long id;\r\n    String email;\r\n    String password;\r\n\r\n    private UserStatus status;\r\n\r\n    public Instructor(String name, String mail,int Age)  {\r\n\r\n        this.name = name;\r\n        this.email = mail;\r\n        this.Age = Age;\r\n        programs = new ArrayList<>();\r\n//        approved = false;\r\n\r\n\r\n    }\r\n\r\n    public Instructor(String email, String password,UserStatus status) {\r\n        this.email = email;\r\n        this.password = password;\r\n        programs = new ArrayList<>();\r\n//        approved = false;\r\n    }\r\n\r\n\r\n    public void setLoggedIn(boolean b) {\r\n        LoggedIn = true;\r\n\r\n    }\r\n\r\n\r\n\r\n    public Instructor() {\r\n        this.email = \"\";\r\n        this.password = \"\";\r\n        programs = new ArrayList<>();\r\n//        approved = false;\r\n    }\r\n    public boolean isApproved() {\r\n       if(status == UserStatus.Approved) {\r\n           return true;\r\n       }\r\n       else return false;\r\n    }\r\n    public void approve() {\r\n        this.status = UserStatus.Approved;\r\n    }\r\n    public void setId(Long id) {\r\n        this.id = id;\r\n    }\r\n\r\n    public Long getId() {\r\n        return id;\r\n    }\r\n    public void setProgram(Program program) {\r\n        this.program = program;\r\n    }\r\n    public String getProgramTitle()\r\n    {\r\n        return program.getTitle();\r\n    }\r\n\r\n    public void sendMessageToClient(Client client, String message) {\r\n        client.setMessage(message);\r\n    }\r\n\r\n    public void postForumMessage(Program program, String title, String content) {\r\n        program.addForumMessage(title, content);\r\n    }\r\n\r\n    public void provideFeedbackToClient(Client client, String feedback) {\r\n        client.receiveFeedback(feedback);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Instructor.java b/src/main/java/org/example/Instructor.java
--- a/src/main/java/org/example/Instructor.java	(revision 622b73fd24eb1f1eebcfb9862740c7cdc9ef2edd)
+++ b/src/main/java/org/example/Instructor.java	(date 1735847687335)
@@ -42,21 +42,57 @@
         programs = new ArrayList<>();
 //        approved = false;
     }
-
-
     public void setLoggedIn(boolean b) {
         LoggedIn = true;
 
     }
 
-
-
     public Instructor() {
         this.email = "";
         this.password = "";
         programs = new ArrayList<>();
 //        approved = false;
     }
+    // Getter for programs list
+    public List<Program> getPrograms() {
+        return programs;
+    }
+
+    // Setter for programs list
+    public void setPrograms(List<Program> programs) {
+        this.programs = programs;
+    }
+
+    // Method to add a program to the instructor's list
+    public void addnewProgram(Program program) {
+        if (!programs.contains(program)) {
+            programs.add(program);
+        }
+    }
+    public void addProgram(String programName, List<String> clientNames)
+    {
+        for (Program existingProgram : programs) {
+            if (existingProgram.getTitle().equals(programName))
+                {
+                    // Add new clients to the existing program
+                    for (String clientName : clientNames) {
+                        existingProgram.enrollClient(new Client(clientName, programName));
+                    }
+                    System.out.println("Clients added to existing program: " + programName);
+                    return;  // Exit once the program is found and clients are added
+                }
+            }
+    }
+
+    public void setName(String instructorName)
+    {
+        this.name = instructorName;
+    }
+    public String getName()
+    {
+        return name;
+    }
+
     public boolean isApproved() {
        if(status == UserStatus.Approved) {
            return true;
@@ -73,13 +109,7 @@
     public Long getId() {
         return id;
     }
-    public void setProgram(Program program) {
-        this.program = program;
-    }
-    public String getProgramTitle()
-    {
-        return program.getTitle();
-    }
+
 
     public void sendMessageToClient(Client client, String message) {
         client.setMessage(message);
Index: src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.AcceptanceTest;\r\n\r\nimport io.cucumber.java.en.And;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\nimport org.example.*;\r\n\r\n\r\nimport java.util.Map;\r\n\r\nimport static org.junit.Assert.assertTrue;\r\n\r\npublic class clientInteractionStepTest {\r\n\r\n    private static Program program;\r\n    private static Client client;\r\n    static Instructor instructor;\r\n    String message;\r\n    String feedback;\r\n    private final ProgressManager progressManager = new ProgressManager();\r\n\r\n//    @Before\r\n//    public static void setupBefore() {\r\n//        // Add mock data to the programService and programList\r\n//        // Create Contents first\r\n//        Content mockContent = new Content(\"https://youtu.be/f3zOrYCwquE\",\"https://unsplash.com/s/photos/gym\",\"https://www.everydayhealth.com/fitness/guide/\");\r\n//        Schedule mockSchedule = new Schedule(new String[]{\"Sunday\",\"Tuesday\",\"Thursday\"},\"5:00 Pm - 7:00 Pm\",\"Online\");\r\n//\r\n//        Program mockProgram = new Program(\r\n//                \"Get Fit & Moving Challenge\",\r\n//                \"30 days\",\r\n//                \"Beginners\",\r\n//                \"Weight Loss, Full Body\",\r\n//                mockContent,\r\n//                mockSchedule,\r\n//                \"29.99 $\"\r\n//        );\r\n//        client = new Client(\"Alice\", \"alice@example.com\",25);\r\n//        instructor = new Instructor(\"John Doe\", \"johndoe@example.com\",30);\r\n//        mockProgram.enrollClient(client);\r\n//        instructor.setProgram(mockProgram);\r\n//        client.enrollProgram(mockProgram);\r\n//\r\n//    }\r\n//    @Given(\"an instructor is logged in\")\r\n//    public void an_instructor_is_logged_in() {\r\n//        // Write code here that turns the phrase above into concrete actions\r\n////        instructorLoggedIn = true;\r\n////        System.out.println(\"Instructor is logged in\");\r\n//        instructor = new Instructor(\"John Doe\", \"johndoe@example.com\",30);\r\n////        if(!instructor.isLoggedIn)\r\n//        instructor.setLoggedIn(true);\r\n//\r\n//    }\r\n\r\n\r\n    @And(\"the instructor has an active program {string} with enrolled clients\")\r\n    public void theInstructorHasAnActiveProgramWithEnrolledClients(String programName) {        // Write code here that turns the phrase above into concrete actions\r\n        Content mockContent = new Content(\"https://youtu.be/f3zOrYCwquE\",\"https://unsplash.com/s/photos/gym\",\"https://www.everydayhealth.com/fitness/guide/\");\r\n        Schedule mockSchedule = new Schedule(new String[]{\"Monday\",\"Wednesday\"},\"12:00 Pm - 2:00 Pm\",\"in person\");\r\n\r\n        program = new Program(\r\n                programName,\r\n                \"60 days\",\r\n                \"Beginners\",\r\n                \"Weight Loss, Full Body\",\r\n                mockContent,\r\n                mockSchedule,\r\n                \"39.99 $\"\r\n        );\r\n        client = new Client(\"tala\", \"tala@example.com\",20);\r\n        instructor = new Instructor(\"John Doe\", \"johndoe@example.com\",30);\r\n\r\n//        System.out.println(client.getName());\r\n        program.enrollClient(client);\r\n//        System.out.println(instructor.getProgramTitle());\r\n        instructor.setProgram(program);\r\n        client.enrollProgram(program);\r\n    }\r\n    @When(\"the instructor selects a client {string} and sends a personalized message {string}\")\r\n    public void theInstructorSelectsAAndSendsA(String specifiedClientName, String specifiedMessage) {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        Client specifiedClient = program.getClientsEnrolled().stream()\r\n                .filter(client -> client.getName().equals(specifiedClientName))\r\n                .findFirst()\r\n                .orElseThrow(() -> new IllegalArgumentException(\"Client not found: \" + specifiedClientName));\r\n\r\n        message = \"Hi \" + specifiedClientName + \", \" + specifiedMessage;\r\n        instructor.sendMessageToClient(specifiedClient, message);\r\n        System.out.println(\"Instructor sent a personalized message: \" + message);\r\n    }\r\n    @Then(\"the client should receive the personalized message\")\r\n    public void the_client_should_receive_the_personalized_message() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        assertTrue(client.hasReceivedMessage(message));\r\n    }\r\n//////////////////////////\r\n@And(\"the instructor has an active program {string} with a discussion forum\")\r\npublic void theInstructorHasAnActiveProgramWithADiscussionForum(String programName)\r\n    {\r\n        Content mockContent = new Content(\"https://youtu.be/f3zOrYCwquE\",\"https://unsplash.com/s/photos/gym\",\"https://www.everydayhealth.com/fitness/guide/\");\r\n        Schedule mockSchedule = new Schedule(new String[]{\"Monday\",\"Wednesday\"},\"12:00 Pm - 2:00 Pm\",\"in person\");\r\n\r\n        program = new Program(\r\n                programName,\r\n                \"60 days\",\r\n                \"Beginners\",\r\n                \"Weight Loss, Full Body\",\r\n                mockContent,\r\n                mockSchedule,\r\n                \"39.99 $\"\r\n        );\r\n        client = new Client(\"tala\", \"tala@example.com\",20);\r\n        instructor = new Instructor(\"John Doe\", \"johndoe@example.com\",30);\r\n\r\n//        System.out.println(client.getName());\r\n        program.enrollClient(client);\r\n//        System.out.println(instructor.getProgramTitle());\r\n        instructor.setProgram(program);\r\n        client.enrollProgram(program);\r\n    }\r\n    @When(\"the instructor posts a message to the forum\")\r\n    public void the_instructor_posts_a_message_to_the_forum() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        String title = \"Weekly Motivation\";\r\n        message = \"Stay consistent, and you will see results!\";\r\n        client.receiveMessage(message);\r\n        instructor.postForumMessage(program, title, message);\r\n    }\r\n    @Then(\"all enrolled clients should see the message on the forum\")\r\n    public void all_enrolled_clients_should_see_the_message_on_the_forum() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        assertTrue(client.hasReceivedMessage(message));\r\n//        verify(program).addForumMessage(\"Weekly Motivation\", \"Stay consistent, and you will see results!\");\r\n    }\r\n\r\n    @And(\"the instructor has access to a client's progress report for {string}\")\r\n    public void theInstructorHasAccessToAClientSProgressReportFor(String clientName) {\r\n//        client = instructor.getClientByName(clientName);\r\n//        if (client == null) {\r\n//            throw new IllegalArgumentException(\"Client \" + clientName + \" not found.\");\r\n//        }\r\n//\r\n//        if (!instructor.isClientInProgram(client)) { // Crucial check!\r\n//            throw new IllegalArgumentException(\"Client \" + clientName + \" is not enrolled in the instructor's program.\");\r\n//        }\r\n        Map<String, String> progressData = progressManager.getProgressData();\r\n        if (progressData == null) {\r\n            throw new IllegalArgumentException(\"Progress data not found for client: \" + clientName);\r\n        }\r\n\r\n    }\r\n    @When(\"the instructor provides feedback to the client\")\r\n    public void the_instructor_provides_feedback_to_the_client() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        feedback = \"Great progress this week! Try increasing your cardio sessions to 20 minutes.\";\r\n        instructor.provideFeedbackToClient(client, feedback);\r\n    }\r\n    @Then(\"the client should receive the feedback\")\r\n    public void the_client_should_receive_the_feedback() {\r\n        // Write code here that turns the phrase above into concrete actions\r\n        assertTrue(client.hasReceivedFeedback(feedback));\r\n\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java b/src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java
--- a/src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java	(revision 622b73fd24eb1f1eebcfb9862740c7cdc9ef2edd)
+++ b/src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java	(date 1735847726923)
@@ -74,7 +74,7 @@
 //        System.out.println(client.getName());
         program.enrollClient(client);
 //        System.out.println(instructor.getProgramTitle());
-        instructor.setProgram(program);
+        instructor.addnewProgram(program);
         client.enrollProgram(program);
     }
     @When("the instructor selects a client {string} and sends a personalized message {string}")
@@ -116,7 +116,7 @@
 //        System.out.println(client.getName());
         program.enrollClient(client);
 //        System.out.println(instructor.getProgramTitle());
-        instructor.setProgram(program);
+        instructor.addnewProgram(program);
         client.enrollProgram(program);
     }
     @When("the instructor posts a message to the forum")
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"96ebe654-e637-4521-b05f-2ed7fce7b6f8\" name=\"Changes\" comment=\"admin 3rd feature (production code done)\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/example/SubscriptionService.java\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/src/test/java/org/example/AcceptanceTest/SubscriptionManagmentTest.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pages/cucumber.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pages/cucumber.html\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/example/User.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/example/User.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/test/java/Features/Admin/SubscriptionManagement.feature\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/test/java/Features/Admin/SubscriptionManagement.feature\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;Ghayda-Saify&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/TalaAlhendi/SW-Project.git&quot;,\r\n    &quot;accountId&quot;: &quot;83da6505-7ab8-4b97-b7f8-45c77f0031ba&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;TalaAlhendi&quot;,\r\n    &quot;repository&quot;: &quot;SW-Project&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qSJUgKlFXO8XHQzPIM5jPamcbX\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Cucumber Java.Feature: clientInteraction.executor\": \"Run\",\r\n    \"JUnit.acceptanceTest.executor\": \"Run\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"#31 on Admin\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"JUnit.acceptanceTest\">\r\n    <configuration name=\"Feature: clientInteraction\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/java/Features/Instructor/clientInteraction.feature\" />\r\n      <option name=\"GLUE\" value=\"org.example.AcceptanceTest\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"Fitness\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Feature: clientInteraction\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"acceptanceTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Fitness\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.AcceptanceTest.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example.AcceptanceTest\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.AcceptanceTest.acceptanceTest\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.acceptanceTest\" />\r\n        <item itemvalue=\"Cucumber Java.Feature: clientInteraction\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"Admin testcode\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734620442002</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734620442002</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Admin test and production code\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734644545713</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734644545713</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"edit on programManagementStepTest\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734646611195</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734646611195</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"96ebe654-e637-4521-b05f-2ed7fce7b6f8\" name=\"Changes\" comment=\"edit on programManagementStepTest\" />\r\n      <created>1734650063351</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734650063351</updated>\r\n      <workItem from=\"1734650065119\" duration=\"3975000\" />\r\n      <workItem from=\"1734702334331\" duration=\"2151000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"add depend. + finish a feature\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734688544556</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734688544556</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Admin testcode\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734689341616</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734689341616</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"editing the whole project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734704132936</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734704132936</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Admin production code #2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734717246337</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734717246338</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Admin complete feature #2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734723340961</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734723340961</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"admin 3rd feature (production code done)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734728881715</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734728881715</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"10\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"e5912781-b57d-45f2-90dc-6c3f69a07d00\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"false\" />\r\n                </map>\r\n              </option>\r\n              <option name=\"HIGHLIGHTERS\">\r\n                <map>\r\n                  <entry key=\"MERGE_COMMITS\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"e5912781-b57d-45f2-90dc-6c3f69a07d00\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Admin test and production code\" />\r\n    <MESSAGE value=\"edit on programManagementStepTest\" />\r\n    <MESSAGE value=\"add depend. + finish a feature\" />\r\n    <MESSAGE value=\"Admin testcode\" />\r\n    <MESSAGE value=\"editing the whole project\" />\r\n    <MESSAGE value=\"Admin production code #2\" />\r\n    <MESSAGE value=\"Admin complete feature #2\" />\r\n    <MESSAGE value=\"edit cucumber.html\" />\r\n    <MESSAGE value=\"admin 3rd feature (production code done)\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"admin 3rd feature (production code done)\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 622b73fd24eb1f1eebcfb9862740c7cdc9ef2edd)
+++ b/.idea/workspace.xml	(date 1735847687718)
@@ -4,13 +4,11 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="96ebe654-e637-4521-b05f-2ed7fce7b6f8" name="Changes" comment="admin 3rd feature (production code done)">
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/example/SubscriptionService.java" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/src/test/java/org/example/AcceptanceTest/SubscriptionManagmentTest.java" afterDir="false" />
+    <list default="true" id="96ebe654-e637-4521-b05f-2ed7fce7b6f8" name="Changes" comment="4th feature">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pages/cucumber.html" beforeDir="false" afterPath="$PROJECT_DIR$/pages/cucumber.html" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/User.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/User.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/test/java/Features/Admin/SubscriptionManagement.feature" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/Features/Admin/SubscriptionManagement.feature" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Instructor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Instructor.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/example/AcceptanceTest/clientInteractionStepTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/test/java/org/example/AcceptanceTest/programManagementStepTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/test/java/org/example/AcceptanceTest/programManagementStepTest.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -68,24 +66,49 @@
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "Cucumber Java.Feature: clientInteraction.executor": "Run",
-    "JUnit.acceptanceTest.executor": "Run",
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "WebServerToolWindowFactoryState": "false",
-    "git-widget-placeholder": "#31 on Admin",
-    "kotlin-language-version-configured": "true",
-    "node.js.detected.package.eslint": "true",
-    "node.js.selected.package.eslint": "(autodetect)",
-    "node.js.selected.package.tslint": "(autodetect)",
-    "nodejs_package_manager_path": "npm",
-    "settings.editor.selected.configurable": "preferences.pluginManager",
-    "vue.rearranger.settings.migration": "true"
-  }
-}]]></component>
-  <component name="RunManager" selected="JUnit.acceptanceTest">
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;JUnit.acceptanceTest.executor&quot;: &quot;Run&quot;,
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;main&quot;,
+    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
+  }
+}</component>
+  <component name="RecentsManager">
+    <key name="CreateClassDialog.RecentsKey">
+      <recent name="org.example.AcceptanceTest" />
+    </key>
+    <key name="MoveClassesOrPackagesDialog.RECENTS_KEY">
+      <recent name="org.example" />
+    </key>
+  </component>
+  <component name="RunManager" selected="Cucumber Java.Feature: progressTracking">
+    <configuration name="Feature: ProgramManagment" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/Features/Instructor/ProgramManagment.feature" />
+      <option name="GLUE" value="org.example.AcceptanceTest" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="Fitness" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter" />
+      <option name="SUGGESTED_NAME" value="Feature: ProgramManagment" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="Feature: clientInteraction" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
       <option name="CUCUMBER_CORE_VERSION" value="5" />
       <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/Features/Instructor/clientInteraction.feature" />
@@ -105,11 +128,30 @@
         <option name="Make" enabled="true" />
       </method>
     </configuration>
+    <configuration name="Feature: progressTracking" type="CucumberJavaRunConfigurationType" factoryName="Cucumber java" temporary="true" nameIsGenerated="true">
+      <option name="CUCUMBER_CORE_VERSION" value="5" />
+      <option name="FILE_PATH" value="$PROJECT_DIR$/src/test/java/Features/Instructor/progressTracking.feature" />
+      <option name="GLUE" value="org.example.AcceptanceTest" />
+      <option name="MAIN_CLASS_NAME" value="io.cucumber.core.cli.Main" />
+      <module name="Fitness" />
+      <option name="PROGRAM_PARAMETERS" value=" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter" />
+      <option name="SUGGESTED_NAME" value="Feature: progressTracking" />
+      <option name="WORKING_DIRECTORY" value="$MODULE_WORKING_DIR$" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="io.cucumber.core.cli.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
     <configuration name="acceptanceTest" type="JUnit" factoryName="JUnit" temporary="true" nameIsGenerated="true">
       <module name="Fitness" />
       <extension name="coverage">
         <pattern>
-          <option name="PATTERN" value="org.example.AcceptanceTest.*" />
+          <option name="PATTERN" value="org.example.*" />
           <option name="ENABLED" value="true" />
         </pattern>
       </extension>
@@ -122,8 +164,10 @@
     </configuration>
     <recent_temporary>
       <list>
+        <item itemvalue="Cucumber Java.Feature: progressTracking" />
+        <item itemvalue="Cucumber Java.Feature: clientInteraction" />
+        <item itemvalue="Cucumber Java.Feature: ProgramManagment" />
         <item itemvalue="JUnit.acceptanceTest" />
-        <item itemvalue="Cucumber Java.Feature: clientInteraction" />
       </list>
     </recent_temporary>
   </component>
@@ -169,6 +213,11 @@
       <updated>1734650063351</updated>
       <workItem from="1734650065119" duration="3975000" />
       <workItem from="1734702334331" duration="2151000" />
+      <workItem from="1735122564956" duration="4556000" />
+      <workItem from="1735286230374" duration="665000" />
+      <workItem from="1735670733331" duration="1228000" />
+      <workItem from="1735764950408" duration="2918000" />
+      <workItem from="1735806297981" duration="11171000" />
     </task>
     <task id="LOCAL-00004" summary="add depend. + finish a feature">
       <option name="closed" value="true" />
@@ -194,31 +243,87 @@
       <option name="project" value="LOCAL" />
       <updated>1734704132936</updated>
     </task>
-    <task id="LOCAL-00007" summary="Admin production code #2">
+    <task id="LOCAL-00007" summary="third feature done with 3 scenarios">
       <option name="closed" value="true" />
-      <created>1734717246337</created>
+      <created>1734728415662</created>
       <option name="number" value="00007" />
       <option name="presentableId" value="LOCAL-00007" />
       <option name="project" value="LOCAL" />
-      <updated>1734717246338</updated>
+      <updated>1734728415662</updated>
     </task>
-    <task id="LOCAL-00008" summary="Admin complete feature #2">
+    <task id="LOCAL-00008" summary="third feature done with 3 scenarios">
       <option name="closed" value="true" />
-      <created>1734723340961</created>
+      <created>1734728797228</created>
       <option name="number" value="00008" />
       <option name="presentableId" value="LOCAL-00008" />
       <option name="project" value="LOCAL" />
-      <updated>1734723340961</updated>
+      <updated>1734728797228</updated>
     </task>
-    <task id="LOCAL-00009" summary="admin 3rd feature (production code done)">
+    <task id="LOCAL-00009" summary="fix the errors">
       <option name="closed" value="true" />
-      <created>1734728881715</created>
+      <created>1735767546184</created>
       <option name="number" value="00009" />
       <option name="presentableId" value="LOCAL-00009" />
       <option name="project" value="LOCAL" />
-      <updated>1734728881715</updated>
+      <updated>1735767546184</updated>
+    </task>
+    <task id="LOCAL-00010" summary="fix the errors">
+      <option name="closed" value="true" />
+      <created>1735767594499</created>
+      <option name="number" value="00010" />
+      <option name="presentableId" value="LOCAL-00010" />
+      <option name="project" value="LOCAL" />
+      <updated>1735767594499</updated>
+    </task>
+    <task id="LOCAL-00011" summary="fix the errors">
+      <option name="closed" value="true" />
+      <created>1735767636307</created>
+      <option name="number" value="00011" />
+      <option name="presentableId" value="LOCAL-00011" />
+      <option name="project" value="LOCAL" />
+      <updated>1735767636307</updated>
+    </task>
+    <task id="LOCAL-00012" summary="fix the errors">
+      <option name="closed" value="true" />
+      <created>1735767692723</created>
+      <option name="number" value="00012" />
+      <option name="presentableId" value="LOCAL-00012" />
+      <option name="project" value="LOCAL" />
+      <updated>1735767692723</updated>
+    </task>
+    <task id="LOCAL-00013" summary="edit the first feature with schedule details and test everything is passed">
+      <option name="closed" value="true" />
+      <created>1735821910847</created>
+      <option name="number" value="00013" />
+      <option name="presentableId" value="LOCAL-00013" />
+      <option name="project" value="LOCAL" />
+      <updated>1735821910847</updated>
+    </task>
+    <task id="LOCAL-00014" summary="edit the first feature with schedule details and test everything is passed">
+      <option name="closed" value="true" />
+      <created>1735823700245</created>
+      <option name="number" value="00014" />
+      <option name="presentableId" value="LOCAL-00014" />
+      <option name="project" value="LOCAL" />
+      <updated>1735823700245</updated>
+    </task>
+    <task id="LOCAL-00015" summary="make the edits for 3 features and everything passed">
+      <option name="closed" value="true" />
+      <created>1735845559911</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1735845559911</updated>
     </task>
-    <option name="localTasksCounter" value="10" />
+    <task id="LOCAL-00016" summary="4th feature">
+      <option name="closed" value="true" />
+      <created>1735846623029</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1735846623029</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -262,14 +367,21 @@
     <MESSAGE value="add depend. + finish a feature" />
     <MESSAGE value="Admin testcode" />
     <MESSAGE value="editing the whole project" />
-    <MESSAGE value="Admin production code #2" />
-    <MESSAGE value="Admin complete feature #2" />
-    <MESSAGE value="edit cucumber.html" />
-    <MESSAGE value="admin 3rd feature (production code done)" />
-    <option name="LAST_COMMIT_MESSAGE" value="admin 3rd feature (production code done)" />
+    <MESSAGE value="third feature done with 3 scenarios" />
+    <MESSAGE value="fix the errors" />
+    <MESSAGE value="edit the first feature with schedule details and test everything is passed" />
+    <MESSAGE value="make the edits for 3 features and everything passed" />
+    <MESSAGE value="4th feature" />
+    <option name="LAST_COMMIT_MESSAGE" value="4th feature" />
   </component>
-  <component name="XSLT-Support.FileAssociations.UIState">
-    <expand />
-    <select />
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <breakpoint enabled="true" type="java-exception">
+          <properties class="java.lang.NullPointerException" package="java.lang" />
+          <option name="timeStamp" value="2" />
+        </breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
 </project>
\ No newline at end of file
Index: src/test/java/org/example/AcceptanceTest/programManagementStepTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example.AcceptanceTest;\r\n\r\nimport io.cucumber.datatable.DataTable;\r\nimport io.cucumber.java.Before;\r\nimport io.cucumber.java.BeforeAll;\r\nimport io.cucumber.java.en.Given;\r\nimport io.cucumber.java.en.Then;\r\nimport io.cucumber.java.en.When;\r\nimport org.example.*;\r\n\r\n\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\nimport java.util.Map;\r\n\r\nimport static org.junit.Assert.*;\r\n\r\n\r\npublic class programManagementStepTest {\r\n    private static List<Program> programList;\r\n    private static ProgramService programService;\r\n    private static boolean isSetUpDone = false; // flag;\r\n    private Map<String, String> programDetails;\r\n    private String title;\r\n    private Program programToUpdate;\r\n    private boolean InstructorLoggedIn;\r\n\r\n    Main app;\r\n    @Before\r\n    public static void setup()\r\n    {\r\n        // Initialize the ProgramService and the program list \"\"once\"\" before all tests in this class\r\n        if(!isSetUpDone)\r\n        {\r\n            programService = new ProgramService();\r\n            programList = new ArrayList<>();\r\n\r\n            // Add mock data to the programService and programList\r\n            // Create Resources first\r\n            Content mockResources = new Content(\"https://youtu.be/f3zOrYCwquE\", \"https://unsplash.com/s/photos/gym\", \"https://www.everydayhealth.com/fitness/guide/\");\r\n            Schedule mockSchedule = new Schedule(new String[]{\"Sunday\", \"Tuesday\", \"Thursday\"}, \"5:00 Pm - 7:00 Pm\", \"Online\");\r\n\r\n            Program mockProgram = new Program(\r\n                    \"Get Fit & Moving Challenge\",\r\n                    \"30 days\",\r\n                    \"Beginners\",\r\n                    \"Weight Loss, Full Body\",\r\n                    mockResources,\r\n                    mockSchedule,\r\n                    \"29.99 $\"\r\n            );\r\n            programList.add(mockProgram);\r\n            programService.addProgram(mockProgram);\r\n            isSetUpDone = true;\r\n            Client client;\r\n            client = new Client(\"Alice\", \"alice@example.com\", 25);\r\n            Instructor instructor = new Instructor(\"John Doe\", \"johndoe@example.com\", 30);\r\n            mockProgram.enrollClient(client);\r\n            instructor.setProgram(mockProgram);\r\n            client.enrollProgram(mockProgram);\r\n            System.out.println(\"Set Up is completed for the mock data\");\r\n        }\r\n}\r\n\r\n\r\n    public programManagementStepTest() {\r\n        app = new Main();\r\n\r\n    }\r\n\r\n    @Given(\"the instructor is logged in\")\r\n    public void theInstructorIsLoggedIn() {\r\n        InstructorLoggedIn = true;\r\n        System.out.println(\"The instructor is logged in for all Scenarios\\n\");\r\n    }\r\n\r\n    @When(\"the following details are provided\")\r\n    public void theFollowingDetailsAreProvided(io.cucumber.datatable.DataTable dataTable) {\r\n        programDetails = dataTable.asMap(String.class, String.class);\r\n//        title = programDetails.get(\"Program title\");\r\n//        System.out.println(title);\r\n        if (InstructorLoggedIn) {\r\n            Content content = new Content(\r\n                    programDetails.get(\"Images\"),\r\n                    programDetails.get(\"Documentation\"),\r\n                    programDetails.get(\"Video Tutorials\")\r\n            );\r\n\r\n            // Create Schedule object\r\n            Schedule schedule = new Schedule(\r\n                    programDetails.get(\"Days\").split(\",\"), // days are comma-separated\r\n                    programDetails.get(\"Time\"),\r\n                    programDetails.get(\"Schedule Type\")\r\n            );\r\n\r\n            Program program = new Program(\r\n                    programDetails.get(\"Program title\"),\r\n                    programDetails.get(\"Duration\"),\r\n                    programDetails.get(\"Difficulty level\"),\r\n                    programDetails.get(\"Goals\"),\r\n                    content,\r\n                    schedule,\r\n                    programDetails.get(\"Price\")\r\n            );\r\n            programList.add(program);\r\n            programService.addProgram(program);\r\n\r\n            System.out.println(\"Program created successfully: \" + program.getTitle());\r\n\r\n        } else {\r\n            System.out.println(\"Instructor is not logged in\");\r\n        }\r\n//        programService.displayAllPrograms();\r\n    }\r\n\r\n    @Then(\"the program is created with the specified details {string}\")\r\n    public void theProgramIsCreatedWithTheSpecifiedDetails(String programTitle) {\r\n        Program program = programService.findProgramByTitle(programTitle);\r\n        assertNotNull(\"The program with title ' \" + programTitle + \" ' wasn't found!\", program);\r\n\r\n        // Verify the program details\r\n        assertEquals(\"The program title doesn't match.\", programTitle, program.getTitle());\r\n        System.out.println(\"Program verified successfully: \" + program.getTitle());\r\n    }\r\n\r\n    @When(\"a fitness program with the title {string} exists\")\r\n    public void aFitnessProgramWithTheTitleExists(String programTitle) {\r\n        programToUpdate = programService.findProgramByTitle(programTitle);\r\n        assertNotNull(\"Program to update was not found!\", programToUpdate);\r\n        title = programToUpdate.getTitle();\r\n\r\n    }\r\n\r\n    @When(\"the instructor updates the program with the following details\")\r\n    public void theInstructorUpdatesTheProgramWithTheFollowingDetails(io.cucumber.datatable.DataTable dataTable) {\r\n        programDetails = dataTable.asMap(String.class, String.class);\r\n        if (programToUpdate != null) {\r\n            // Update Resources object\r\n            Content updatedContent = new Content(\r\n                    programDetails.get(\"Images\"),\r\n                    programDetails.get(\"Documentation\"),\r\n                    programDetails.get(\"Video Tutorials\")\r\n            );\r\n\r\n            // Update Schedule object\r\n            Schedule updatedSchedule = new Schedule(\r\n                    programDetails.get(\"Days\").split(\",\"),\r\n                    programDetails.get(\"Time\"),\r\n                    programDetails.get(\"Schedule Type\")\r\n            );\r\n            programToUpdate.setProgramTitle(programDetails.get(\"Program title\"));\r\n            programToUpdate.setDuration(programDetails.get(\"Duration\"));\r\n            programToUpdate.setDifficultyLevel(programDetails.get(\"Difficulty level\"));\r\n            programToUpdate.setGoals(programDetails.get(\"Goals\"));\r\n            programToUpdate.setContent(updatedContent);\r\n            programToUpdate.setSchedule(updatedSchedule);\r\n            programToUpdate.setPrice(programDetails.get(\"Price\"));\r\n\r\n            programService.updateProgram(programToUpdate);\r\n//            programService.displayAllPrograms();\r\n        }\r\n    }\r\n\r\n    @Then(\"the program is updated successfully with the new details\")\r\n    public void theProgramIsUpdatedSuccessfullyWithTheNewDetails() {\r\n        assertNotNull(\"Updated program should exist\", programToUpdate);\r\n\r\n        assertEquals(\"The program title wasn't updated.\", programDetails.get(\"Program title\"), programToUpdate.getTitle());\r\n        assertEquals(\"The schedule type wasn't updated.\", programDetails.get(\"Schedule Type\"), programToUpdate.getSchedule().getScheduleType());\r\n        System.out.println(\"Program updated successfully: \" + programToUpdate.getTitle());\r\n\r\n\r\n    }\r\n\r\n    @When(\"a fitness program with the title {string} doesn't exist\")\r\n    public void aFitnessProgramWithTheTitleDoesnTExist(String programTitle) {\r\n        System.out.println(\"the 3rd Scenario\\n\");\r\n        title = programTitle;\r\n        // Check that the program does not exist\r\n        programToUpdate = programService.findProgramByTitle(programTitle);\r\n        assertNull(\"Program should not exist!\", programToUpdate);\r\n    }\r\n    @Then(\"the system displays an error message indicating that the program does not exist\")\r\n    public void theSystemDisplaysAnErrorMessageIndicatingThatTheProgramDoesNotExist() {\r\n        assertNull(\"Program should not exist!\", programToUpdate);\r\n        System.out.println(\"The Program Title: '\" + title + \"'  Doesn't Exist! \");\r\n    }\r\n\r\n    @When(\"the instructor attempts to delete the program with title {string}\")\r\n    public void theInstructorAttemptsToDeleteTheProgramWithTitle(String programTitle) {\r\n        programService.deleteProgram(programTitle);\r\n\r\n    }\r\n\r\n    @Then(\"the program deletion result is:\")\r\n    public void theProgramDeletionResultIs(DataTable dataTable) {\r\n\r\n        // Get expected status and message from DataTable\r\n        List<Map<String, String>> rows = dataTable.asMaps(String.class, String.class);\r\n        String expectedStatus = rows.get(0).get(\"Status\");\r\n        String expectedMessage = rows.get(0).get(\"Message\");\r\n\r\n        // Get actual status and message from programService (assuming methods exist)\r\n        String actualStatus = programService.getDeletionStatus();\r\n        String actualMessage = programService.getDeletionMessage();\r\n\r\n        // Assert expected and actual results\r\n        if (expectedStatus.equals(\"Success\")) {\r\n            // Check if program is actually deleted (optional)\r\n            Program deletedProgram = programList.stream()\r\n                    .filter(p -> p.getTitle().equals(title))\r\n                    .findFirst()\r\n                    .orElse(null);\r\n            assertNull(\"Program should be deleted successfully!\", deletedProgram);\r\n        } else {\r\n            // Program deletion failed, check for expected message\r\n        }\r\n        assertEquals(expectedStatus, actualStatus);\r\n        assertEquals(expectedMessage, actualMessage);\r\n    }\r\n\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/test/java/org/example/AcceptanceTest/programManagementStepTest.java b/src/test/java/org/example/AcceptanceTest/programManagementStepTest.java
--- a/src/test/java/org/example/AcceptanceTest/programManagementStepTest.java	(revision 622b73fd24eb1f1eebcfb9862740c7cdc9ef2edd)
+++ b/src/test/java/org/example/AcceptanceTest/programManagementStepTest.java	(date 1735847687339)
@@ -57,7 +57,7 @@
             client = new Client("Alice", "alice@example.com", 25);
             Instructor instructor = new Instructor("John Doe", "johndoe@example.com", 30);
             mockProgram.enrollClient(client);
-            instructor.setProgram(mockProgram);
+            instructor.addnewProgram(mockProgram);
             client.enrollProgram(mockProgram);
             System.out.println("Set Up is completed for the mock data");
         }
