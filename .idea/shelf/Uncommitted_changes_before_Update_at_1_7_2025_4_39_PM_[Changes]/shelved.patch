Index: src/main/java/org/example/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.example;\r\nimport java.util.*;\r\n\r\n\r\npublic class Main {\r\n    private static List<Client> clients = new ArrayList<>();\r\n    private static List<Program> programs = new ArrayList<>();\r\n    private static List<Instructor> instructors = new ArrayList<>();\r\n    private static ProgramService programService = new ProgramService();\r\n    private static User currentUser = new User();\r\n    private static Profile currentProfile = new Profile();\r\n    private static ProgramManager programManager = new ProgramManager();\r\n    private static FeedbackAndReviewsManager feedbackManager = new FeedbackAndReviewsManager();\r\n    private static ProgressManager progressManager = new ProgressManager();\r\n\r\n\r\n    public static void main(String[] args) {\r\n        initializeMockData();\r\n        Scanner scanner = new Scanner(System.in);\r\n       while(true)\r\n       {\r\n           String mainChoice;\r\n           System.out.println(\"==== Fitness Management System ====\");\r\n           System.out.println(\"1. Admin\");\r\n           System.out.println(\"2. Instructor\");\r\n           System.out.println(\"3. Client\");\r\n           System.out.println(\"4. Exit\");\r\n           System.out.print(\"Select an option : \");\r\n           mainChoice = scanner.next();\r\n           switch (mainChoice) {\r\n               case \"1\" :\r\n                   adminMenu(scanner);\r\n                   break;\r\n               case \"2\" :\r\n                   instructorMenu(scanner);\r\n                   break;\r\n               case \"3\" :\r\n                   clientMenu(scanner);\r\n                   break;\r\n               case \"4\" :\r\n                   System.out.println(\"Thank you for using our Fitness program :)\");\r\n                   return;\r\n               default :\r\n                   System.err.println(\"Invalid input!\\nPlease try again.\");\r\n           }\r\n\r\n       }\r\n    }\r\n    private static void initializeMockData() {\r\n        Content mockResources = new Content(\r\n                \"https://youtu.be/f3zOrYCwquE\",\r\n                \"https://unsplash.com/s/photos/gym\",\r\n                \"https://www.everydayhealth.com/fitness/guide/\"\r\n        );\r\n\r\n        Schedule mockSchedule1 = new Schedule(\r\n                new String[]{\"Sunday\", \"Tuesday\", \"Thursday\"},\r\n                \"8:00 AM - 10:00 AM\",\r\n                \"Online\"\r\n        );\r\n        Schedule mockSchedule2 = new Schedule(\r\n                new String[]{\"Sunday\", \"Tuesday\", \"Thursday\"},\r\n                \"5:00 PM - 7:00 PM\",\r\n                \"Online\"\r\n        );\r\n\r\n        Program mockProgram1 = new Program(\r\n                \"Get Fit & Moving Challenge\",\r\n                \"30 days\",\r\n                \"Beginners\",\r\n                \"Weight Loss, Full Body\",\r\n                mockResources,\r\n                mockSchedule1,\r\n                \"29.99 $\"\r\n        );\r\n\r\n        Program mockProgram2 = new Program(\r\n                \"Strength & Endurance Training\",\r\n                \"6 weeks\",\r\n                \"Intermediate\",\r\n                \"Strength, Endurance\",\r\n                mockResources,\r\n                mockSchedule2,\r\n                \"39.99 $\"\r\n        );\r\n\r\n        Client client1 = new Client(\"Alice\", \"alice@example.com\", 25);\r\n        client1.setId(Long.parseLong(\"12215614\"));\r\n        Client client2 = new Client(\"Bob\", \"bob@example.com\", 30);\r\n        client2.setId(Long.parseLong(\"12213611\"));\r\n        Client client3 = new Client(\"Charlie\", \"charlie@example.com\", 35);\r\n        client3.setId(Long.parseLong(\"12112569\"));\r\n\r\n        Instructor instructor1 = new Instructor(\"John Doe\", \"johndoe@example.com\", 30);\r\n        Instructor instructor2 = new Instructor(\"Jane Smith\", \"janesmith@example.com\", 28);\r\n\r\n        mockProgram1.enrollClient(client1);\r\n        mockProgram1.enrollClient(client2);\r\n        mockProgram2.enrollClient(client3);\r\n\r\n        instructor1.addnewProgram(mockProgram1);\r\n        instructor2.addnewProgram(mockProgram2);\r\n\r\n        client1.enrollProgram(mockProgram1);\r\n        client2.enrollProgram(mockProgram1);\r\n        client3.enrollProgram(mockProgram2);\r\n\r\n        programService.addProgram(mockProgram1);\r\n        programService.addProgram(mockProgram2);\r\n\r\n        programs.add(mockProgram1);\r\n        programs.add(mockProgram2);\r\n        clients.add(client1);\r\n        clients.add(client2);\r\n        clients.add(client3);\r\n        instructors.add(instructor1);\r\n        instructors.add(instructor2);\r\n    }\r\n\r\n    private static void instructorMenu(Scanner scanner) {\r\n        while (true)\r\n        {\r\n            System.out.println(\"\\n\\t\\\"Instructor Menu\\\"\");\r\n            System.out.println(\"1. View Your Programs\");\r\n            System.out.println(\"2. Add new Program\");\r\n            System.out.println(\"3. Update A Program\");\r\n            System.out.println(\"4. Delete A Program\");\r\n            System.out.println(\"5. View Enrolled Clients\");\r\n            System.out.println(\"6. Enroll a new Client\");\r\n            System.out.println(\"7. delete a client\");\r\n            System.out.println(\"8. Exit\");\r\n            System.out.print(\"Select an option: \");\r\n            String choice = scanner.next();\r\n            scanner.nextLine();\r\n            switch (choice)\r\n            {\r\n                case \"1\":\r\n                    viewAllPrograms();\r\n                    break;\r\n                case \"2\":\r\n                    addNewProgram();\r\n                    break;\r\n                case \"3\":\r\n                    updateProgram();\r\n                    break;\r\n                case \"4\":\r\n                    deleteProgram();\r\n                    break;\r\n                case \"5\":\r\n                    viewClientsEnrolled();\r\n                    break;\r\n                case \"6\":\r\n                    enrollNewClient();\r\n                    break;\r\n                case \"7\":\r\n                    deleteClientByName();\r\n                    break;\r\n                case \"8\":\r\n                    return;\r\n                default:\r\n                    System.err.println(\"Invalid input!\\nPlease try again.\");\r\n\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    private static void deleteClientByName() {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        System.out.println(\"Choose a program to delete a client from:\");\r\n        programService.displayAllProgramsNames();\r\n\r\n        System.out.println(\"Enter the program name (make sure to write it correctly):\");\r\n        String programName = scanner.nextLine();\r\n\r\n        Program chosenProgram = programService.findProgramByTitle(programName);\r\n        if (chosenProgram != null) {\r\n\r\n            if (chosenProgram.getClientsEnrolled().isEmpty()) {\r\n                System.out.println(\"No clients are enrolled in this program.\");\r\n                return;\r\n            }\r\n\r\n            System.out.println(\"List of enrolled clients:\");\r\n            for (Client client : chosenProgram.getClientsEnrolled()) {\r\n                System.out.println(\"- \" + client.getName() + \" (ID: \" + client.getId() + \")\");\r\n            }\r\n\r\n            System.out.println(\"Enter the client's name to delete:\");\r\n            String clientName = scanner.nextLine();\r\n\r\n            // Step 6: Search for the client by name and remove them.\r\n            boolean clientFound = false;\r\n            Iterator<Client> iterator = chosenProgram.getClientsEnrolled().iterator();\r\n            while (iterator.hasNext()) {\r\n                Client client = iterator.next();\r\n                if (client.getName().equalsIgnoreCase(clientName)) {\r\n                    iterator.remove();\r\n                    clientFound = true;\r\n                    System.out.println(\"Client \" + clientName + \" has been successfully removed.\");\r\n                    break;\r\n                }\r\n            }\r\n\r\n            if (!clientFound) {\r\n                System.err.println(\"No client with the name \" + clientName + \" found in this program.\");\r\n            }\r\n        } else {\r\n            System.err.println(\"There is no such program in your programs list.\");\r\n        }\r\n    }\r\n\r\n\r\n    private static void enrollNewClient() {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        System.out.println(\"Choose a program to enroll a new client into:\");\r\n        programService.displayAllProgramsNames();\r\n\r\n        System.out.println(\"Enter the program name: 'Make sure to write the name correctly'\");\r\n        String programName = scanner.nextLine();\r\n\r\n        Program chosenProgram = programService.findProgramByTitle(programName);\r\n        if (chosenProgram != null) {\r\n\r\n            // Step 3: Gather client information.\r\n            System.out.print(\"Enter the Client's Name: \");\r\n            String clientName = scanner.nextLine();\r\n\r\n            System.out.print(\"Enter the Client's ID: \");\r\n            String clientId = scanner.nextLine();\r\n\r\n            System.out.print(\"Enter the Client's Email: \");\r\n            String clientEmail = scanner.nextLine();\r\n\r\n            System.out.print(\"Enter the Client's Age: \");\r\n            String clientAge = scanner.nextLine();\r\n\r\n            // Step 4: Create a new Client object and add to the program.\r\n            Client newClient = new Client(clientName,Long.parseLong(clientId),clientEmail,Integer.parseInt(clientAge));\r\n            chosenProgram.clientsEnrolled.add(newClient);\r\n            clients.add(newClient);\r\n            System.out.println(\"Client \" + clientName + \" has been successfully enrolled in the program: \" + programName);\r\n        } else {\r\n                System.err.println(\"There is no such program in your programs list\");\r\n            }\r\n\r\n    }\r\n\r\n    private static void viewClientsEnrolled() {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        System.out.println(\"Choose the program you want to view the enrolled clients for: \");\r\n        programService.displayAllProgramsNames();\r\n\r\n        System.out.println(\"Write the program name that you want to view the enrolled clients: 'Make sure to write the name correctly' \");\r\n        String programName = scanner.nextLine();\r\n\r\n        Program chosenProgram = programService.findProgramByTitle(programName);\r\n        if(chosenProgram != null)\r\n        {\r\n            List<Client> clientsEnrolledFotChosenProgram = chosenProgram.clientsEnrolled;\r\n            if (clientsEnrolledFotChosenProgram.isEmpty()) {\r\n                System.out.println(\"No clients enrolled.\");\r\n            } else {\r\n                System.out.println(\"Enrolled Clients:\");\r\n                for (Client client : clientsEnrolledFotChosenProgram) {\r\n                    System.out.println(client.getName());\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            System.err.println(\"There is no such program in your programs list\");\r\n        }\r\n    }\r\n\r\n    private static void deleteProgram() {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        System.out.println(\"Choose the program you want to delete to: \");\r\n        programService.displayAllProgramsNames();\r\n\r\n        System.out.println(\"Write the program name that you want Delete: 'Make sure to write the name correctly' \");\r\n        String programName = scanner.nextLine();\r\n\r\n        Program chosenProgram = programService.findProgramByTitle(programName);\r\n        if(chosenProgram != null)\r\n        {\r\n            programService.deleteProgram(chosenProgram.getTitle());\r\n            System.out.println(\"The Program has been deleted Successfully :)\");\r\n        }\r\n        else\r\n        {\r\n            System.err.println(\"There is no such program in your programs list\");\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private static void updateProgram() {\r\n        Scanner scanner = new Scanner(System.in);\r\n\r\n        System.out.println(\"Choose the program you want to make changes to: \");\r\n        programService.displayAllProgramsNames();\r\n\r\n        System.out.println(\"Write the program name that you want to make edits to: 'Make sure to write the name correctly' \");\r\n        String programName = scanner.nextLine();\r\n\r\n        Program chosenProgram = programService.findProgramByTitle(programName);\r\n        if(chosenProgram != null)\r\n        {\r\n            System.out.println(programService.programDetailsAsString(chosenProgram));\r\n            System.out.println(\"Please choose what do you want to edit : \");\r\n            System.out.println(\"1. Edit Program Name\");\r\n            System.out.println(\"2. Edit Program Description\");\r\n            System.out.println(\"3. Edit Program Content\");\r\n            System.out.println(\"4. Edit Program Schedule\");\r\n            System.out.println(\"5. Edit Program Cost\");\r\n            System.out.println(\"6. Cancel\");\r\n            System.out.print(\"Select an option: \");\r\n\r\n            String choice = scanner.nextLine();\r\n            switch (choice)\r\n            {\r\n                case \"1\":\r\n                    System.out.print(chosenProgram.getTitle() + \"\\nThe new Title is \");\r\n                    programName = scanner.nextLine();\r\n                    chosenProgram.setProgramTitle(programName);\r\n                    System.out.println(\"The Program Name Updated Successfully :)\");\r\n                    break;\r\n                case \"2\":\r\n                    System.out.print(chosenProgram.getDuration() + \"\\nThe new Duration: \");\r\n                    chosenProgram.setDuration(scanner.nextLine());\r\n\r\n                    System.out.print(chosenProgram.getDifficultyLevel() + \"\\nThe new Difficulty Level: \");\r\n                    chosenProgram.setDifficultyLevel(scanner.nextLine());\r\n\r\n                    System.out.print(chosenProgram.getGoals() + \"\\nThe new Goal: \");\r\n                    chosenProgram.setGoals(scanner.nextLine());\r\n\r\n                    System.out.println(\"The Program's Description Updated Successfully :)\");\r\n\r\n                    break;\r\n                case \"3\":\r\n                    System.out.println(chosenProgram.getContent());\r\n                    Content content = new Content(chosenProgram.getContent());\r\n\r\n                    System.out.print(content.getVideoTutorials() + \"\\nThe new video's tutorial URL: \");\r\n                    content.setVideoTutorial(scanner.nextLine());\r\n\r\n                    System.out.print(content.getImages() + \"\\nThe new Image's URL: \");\r\n                    content.setImages(scanner.nextLine());\r\n\r\n                    System.out.print(content.getDocumentation() + \"\\nThe new Documentation's URL: \");\r\n                    content.setDocumentation(scanner.nextLine());\r\n\r\n                    chosenProgram.setContent(content);\r\n\r\n                    System.out.println(\"The Program's Content Updated Successfully :)\");\r\n                    break;\r\n                case \"4\":\r\n                    System.out.println(chosenProgram.getSchedule());\r\n                    Schedule chosenProgramSchedule = new Schedule(chosenProgram.getSchedule());\r\n\r\n\r\n                    System.out.println(Arrays.toString(chosenProgramSchedule.getDays()) + \"\\nThe new Days: \");\r\n                    String input = scanner.nextLine();\r\n                    String[] days = input.split(\",\");\r\n                    /////To trim spaces :)\r\n                    for (int i = 0; i < days.length; i++) {\r\n                        days[i] = days[i].trim();\r\n                    }\r\n                    chosenProgramSchedule.setDays(days);\r\n\r\n                    System.out.println(chosenProgramSchedule.getTime());\r\n                    System.out.println(\"Select a new time slot:\");\r\n                    System.out.println(\"1.  6:00 AM -  8:00 AM\");\r\n                    System.out.println(\"2. 10:00 AM - 12:00 PM\");\r\n                    System.out.println(\"3.  7:00 PM -  9:00 PM\");\r\n                    System.out.println(\"4.  5:00 PM -  7:00 PM\");\r\n                    input =  scanner.nextLine();\r\n                    String time ;\r\n                    switch (input)\r\n                    {\r\n                        case \"1\":\r\n                            chosenProgramSchedule.setTime(\"6:00 AM -  8:00 AM\");\r\n                            break;\r\n                        case \"2\":\r\n                            chosenProgramSchedule.setTime(\"10:00 AM - 12:00 PM\");\r\n                            break;\r\n                        case \"3\":\r\n                            chosenProgramSchedule.setTime(\"5:00 PM -  7:00 PM\");\r\n                            break;\r\n                        case \"4\":\r\n                            chosenProgramSchedule.setTime(\"8:00 PM -  10:00 PM\");\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n\r\n                    System.out.println(chosenProgramSchedule.getScheduleType() + \"\\nThe new Schedule Type (online or in-person): \");\r\n                    chosenProgramSchedule.setScheduleType(scanner.nextLine());\r\n\r\n                    chosenProgram.setSchedule(chosenProgramSchedule);\r\n\r\n                    System.out.println(\"The Schedule Have been updated Successfully :)\");\r\n\r\n                    break;\r\n                case \"5\":\r\n                    System.out.println(chosenProgram.getPrice() + \"\\nEnter The new program price\");\r\n                    chosenProgram.setPrice(scanner.nextLine());\r\n\r\n                    System.out.println(\"The Program's Price Have been updated Successfully :)\");\r\n\r\n                    break;\r\n                case \"6\":\r\n                    return;\r\n                default:\r\n                    System.err.println(\"Invalid input!\\nPlease try again.\");\r\n            }\r\n\r\n        }\r\n        else\r\n        {\r\n            System.err.println(\"There is no such program in your programs list\");\r\n        }\r\n\r\n    }\r\n\r\n    private static void addNewProgram() {\r\n        Scanner scanner = new Scanner(System.in);\r\n        System.out.println(\"\\nLet's Enter Our New Program Details :)\");\r\n\r\n        System.out.print(\"Enter the Program Title :\\t\");\r\n        String programName = scanner.nextLine();\r\n\r\n        System.out.print(\"\\nEnter The Duration (e.g. 5 weeks) :\\t\");\r\n        String duration = scanner.nextLine();\r\n\r\n        System.out.print(\"\\nEnter The Target Audience (e.g. Beginners):\\t\");\r\n        String difficultyLevel = scanner.nextLine();\r\n\r\n        System.out.print(\"\\nEnter The Program Type (e.g. Weight Loss):\\t\");\r\n        String goal = scanner.nextLine();\r\n\r\n        System.out.print(\"\\nEnter The Suitable Price for it (e.g. 30.33 $):\\t\");\r\n        String price = scanner.nextLine();\r\n\r\n\r\n        System.out.print(\"\\nEnter The Training Days: (e.g. Tuesday, monday )\\t\");\r\n        String input = scanner.nextLine();\r\n        String[] days = input.split(\",\");\r\n        /////To trim spaces :)\r\n        for (int i = 0; i < days.length; i++) {\r\n            days[i] = days[i].trim();\r\n        }\r\n\r\n        System.out.println(\"\\nSelect a time slot:\");\r\n        System.out.println(\"1.  6:00 AM -  8:00 AM\");\r\n        System.out.println(\"2. 10:00 AM - 12:00 PM\");\r\n        System.out.println(\"3.  7:00 PM -  9:00 PM\");\r\n        System.out.println(\"4.  5:00 PM -  7:00 PM\");\r\n        input =  scanner.nextLine();\r\n        String time = new String();\r\n        switch (input)\r\n        {\r\n            case \"1\":\r\n                time = \"6:00 AM -  8:00 AM\";\r\n                break;\r\n            case \"2\":\r\n                time = \"10:00 AM - 12:00 PM\";\r\n                break;\r\n            case \"3\":\r\n                time = \"5:00 PM -  7:00 PM\";\r\n                break;\r\n            case \"4\":\r\n                time = \"8:00 PM -  10:00 PM\";\r\n                break;\r\n            default:\r\n                break;\r\n\r\n        }\r\n        System.out.println(\"\\nEnter if you want it Online or In-person :\\t\");\r\n        String scheduleType = scanner.nextLine();\r\n\r\n        Schedule schedule = new Schedule(days,time,scheduleType);\r\n\r\n        System.out.println(\"\\nPress 1 if you want to add the Content URLs\\nPress 2 or any button to keep the default\\n\");\r\n        String choice = scanner.nextLine();\r\n        String url1,url2,url3;\r\n        Content content;\r\n        if(choice.equals(\"1\"))\r\n        {\r\n            System.out.print(\"\\nEnter The Video's URL on Youtube:\\t\");\r\n            url1 = scanner.nextLine();\r\n\r\n            System.out.print(\"\\nEnter The Document's URL:\\t\");\r\n            url2 = scanner.nextLine();\r\n\r\n            System.out.print(\"\\nEnter The Image's URL:\\t\");\r\n            url3 = scanner.nextLine();\r\n\r\n            content = new Content(url1,url2,url3);\r\n        }\r\n        else\r\n        {\r\n            content = new Content(\"https://youtu.be/f3zOrYCwquE\", \"https://unsplash.com/s/photos/gym\", \"https://www.everydayhealth.com/fitness/guide/\");\r\n        }\r\n        Program newProgram = new Program(programName,duration,difficultyLevel,goal,content,schedule,price);\r\n        programService.addProgram(newProgram);\r\n        programs.add(newProgram);\r\n        System.out.println(\"\\nNew program added successfully!\");\r\n    }\r\n\r\n    private static void viewAllPrograms() {\r\n        programService.displayAllProgramsNames();\r\n        System.out.println(\"\\nPress 1 if you want to display all programs details \\nPress any other button to return to the Instructor menu\");\r\n        Scanner scanner = new Scanner(System.in);\r\n        String choice = scanner.next();\r\n        scanner.nextLine();\r\n        if (choice.equals(\"1\"))\r\n        {\r\n            programService.displayAllPrograms();\r\n        }\r\n    }\r\n\r\n    private static void adminMenu(Scanner scanner) {\r\n    }\r\n\r\n    public static void login(Scanner scanner) {\r\n        System.out.print(\"Enter your User ID: \");\r\n        String id = scanner.nextLine();\r\n        System.out.print(\"Enter your Password: \");\r\n        String password = scanner.nextLine();\r\n\r\n\r\n        if (currentUser.login(id, password)) {\r\n            System.out.println(\"Login Successful!\");\r\n        } else {\r\n            System.out.println(\"Invalid login credentials.\");\r\n            return;\r\n        }\r\n    }\r\n\r\n\r\n    private static void clientMenu(Scanner scanner) {\r\n        while (true) {\r\n            System.out.println(\"\\nClient Menu:\");\r\n            System.out.println(\"1. View Profile\");\r\n            System.out.println(\"2. Customize Profile\");\r\n            System.out.println(\"3. View Program Details\");\r\n            System.out.println(\"4. Rate Program\");\r\n            System.out.println(\"5. Track Progress\");\r\n            System.out.println(\"6. View Progress Summary\");\r\n            System.out.println(\"7. Exit\");\r\n\r\n            System.out.print(\"Enter your choice: \");\r\n            int choice = scanner.nextInt();\r\n            scanner.nextLine();\r\n\r\n            switch (choice) {\r\n                case 1:\r\n                    viewProfile();\r\n                    break;\r\n                case 2:\r\n                    customizeProfile(scanner);\r\n                    break;\r\n                case 3:\r\n                    viewProgramDetails(scanner);\r\n                    break;\r\n                case 4:\r\n                    rateProgram(scanner);\r\n                    break;\r\n                case 5:\r\n                    trackProgress(scanner);\r\n                    break;\r\n                case 6:\r\n                    viewProgressSummary();\r\n                    break;\r\n                case 7:\r\n                    System.out.println(\"Exiting...\");\r\n                    return;\r\n                default:\r\n                    System.out.println(\"Invalid choice. Please try again.\");\r\n            }\r\n        }\r\n    }\r\n\r\n    private static void viewProfile() {\r\n        System.out.println(\"Displaying Profile Information...\");\r\n        System.out.println(\"Name: \" + currentProfile.getName());\r\n        System.out.println(\"Age: \" + currentProfile.getAge());\r\n        System.out.println(\"Fitness Goal: \" + currentProfile.getFitnessGoal());\r\n        System.out.println(\"Dietary Preferences: \" + currentProfile.getDietaryPreferences());\r\n        System.out.println(\"Dietary Restrictions: \" + currentProfile.getDietaryRestrictions());\r\n    }\r\n\r\n    private static void customizeProfile(Scanner scanner) {\r\n        System.out.println(\"Customizing Profile...\");\r\n        System.out.print(\"Enter new fitness goal: \");\r\n        String fitnessGoal = scanner.nextLine();\r\n        currentProfile.setFitnessGoal(fitnessGoal);\r\n\r\n        System.out.print(\"Enter new dietary preferences: \");\r\n        String dietaryPreferences = scanner.nextLine();\r\n        currentProfile.setDietaryPreferences(dietaryPreferences);\r\n\r\n        System.out.print(\"Enter new dietary restrictions: \");\r\n        String dietaryRestrictions = scanner.nextLine();\r\n        currentProfile.setDietaryRestrictions(dietaryRestrictions);\r\n\r\n        System.out.println(\"Profile customized successfully!\");\r\n    }\r\n\r\n    private static void viewProgramDetails(Scanner scanner) {\r\n        System.out.print(\"Enter Program Name: \");\r\n        String programName = scanner.nextLine();\r\n\r\n        Map<String, String> programDetails = programManager.getProgramDetails(programName);\r\n        if (programDetails != null) {\r\n            System.out.println(\"Program Details:\");\r\n            programDetails.forEach((key, value) -> System.out.println(key + \": \" + value));\r\n        } else {\r\n            System.out.println(\"Program not found.\");\r\n        }\r\n    }\r\n\r\n    private static void rateProgram(Scanner scanner) {\r\n        System.out.print(\"Enter Program Name: \");\r\n        String programName = scanner.nextLine();\r\n        System.out.print(\"Enter Rating (1-5): \");\r\n        int rating = scanner.nextInt();\r\n        scanner.nextLine();\r\n\r\n\r\n        feedbackManager.addRating(programName, rating);\r\n        double averageRating = feedbackManager.getAverageRating(programName);\r\n\r\n        System.out.println(\"Program '\" + programName + \"' rated with a score of \" + rating + \" stars.\");\r\n        System.out.println(\"The updated average rating is: \" + averageRating);\r\n    }\r\n\r\n    private static void trackProgress(Scanner scanner) {\r\n        System.out.print(\"Enter your current weight: \");\r\n        String weight = scanner.nextLine();\r\n\r\n        System.out.print(\"Enter your current BMI: \");\r\n        String bmi = scanner.nextLine();\r\n\r\n        System.out.print(\"Enter your attendance percentage: \");\r\n        String attendance = scanner.nextLine();\r\n\r\n        progressManager.inputProgressData(weight, bmi, attendance);\r\n        progressManager.recordProgressHistory(\"2025-01-02\", weight, bmi, attendance);\r\n\r\n        System.out.println(\"Progress recorded successfully!\");\r\n    }\r\n\r\n    private static void viewProgressSummary() {\r\n        Map<String, String> summary = progressManager.generateSummary(3, 5, \"3kg\", \"0.6\");\r\n        System.out.println(\"Progress Summary: \");\r\n        summary.forEach((key, value) -> System.out.println(key + \": \" + value));\r\n    }\r\n\r\n}\r\n\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/example/Main.java b/src/main/java/org/example/Main.java
--- a/src/main/java/org/example/Main.java	(revision 1fe0670fed511332ac74986761b3d07c32658ac5)
+++ b/src/main/java/org/example/Main.java	(date 1736258976352)
@@ -15,6 +15,7 @@
 
 
     public static void main(String[] args) {
+
         initializeMockData();
         Scanner scanner = new Scanner(System.in);
        while(true)
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"96ebe654-e637-4521-b05f-2ed7fce7b6f8\" name=\"Changes\" comment=\"edit programMonitoring stepTest\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CoverageOptionsProvider\">\r\n    <option name=\"myAddOrReplace\" value=\"1\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Merge.Settings\">\r\n    <option name=\"BRANCH\" value=\"origin/Instructor\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"main\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\"><![CDATA[{\r\n  \"lastFilter\": {}\r\n}]]></component>\r\n  <component name=\"GitHubPullRequestState\">{\r\n  &quot;prStates&quot;: [\r\n    {\r\n      &quot;id&quot;: {\r\n        &quot;id&quot;: &quot;PR_kwDONTwW486GnF8s&quot;,\r\n        &quot;number&quot;: 44\r\n      },\r\n      &quot;lastSeen&quot;: 1735930031703\r\n    }\r\n  ]\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">{\r\n  &quot;selectedUrlAndAccountId&quot;: {\r\n    &quot;url&quot;: &quot;https://github.com/TalaAlhendi/SW-Project.git&quot;,\r\n    &quot;accountId&quot;: &quot;83da6505-7ab8-4b97-b7f8-45c77f0031ba&quot;\r\n  },\r\n  &quot;recentNewPullRequestHead&quot;: {\r\n    &quot;server&quot;: {\r\n      &quot;useHttp&quot;: false,\r\n      &quot;host&quot;: &quot;github.com&quot;,\r\n      &quot;port&quot;: null,\r\n      &quot;suffix&quot;: null\r\n    },\r\n    &quot;owner&quot;: &quot;TalaAlhendi&quot;,\r\n    &quot;repository&quot;: &quot;SW-Project&quot;\r\n  }\r\n}</component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 5\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2qSJUgKlFXO8XHQzPIM5jPamcbX\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"Application.Main.executor\": \"Run\",\r\n    \"Cucumber Java.Feature: clientInteraction.executor\": \"Run\",\r\n    \"JUnit.acceptanceTest.executor\": \"Coverage\",\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"WebServerToolWindowFactoryState\": \"false\",\r\n    \"git-widget-placeholder\": \"main\",\r\n    \"kotlin-language-version-configured\": \"true\",\r\n    \"node.js.detected.package.eslint\": \"true\",\r\n    \"node.js.selected.package.eslint\": \"(autodetect)\",\r\n    \"node.js.selected.package.tslint\": \"(autodetect)\",\r\n    \"nodejs_package_manager_path\": \"npm\",\r\n    \"project.structure.last.edited\": \"Modules\",\r\n    \"project.structure.proportion\": \"0.15\",\r\n    \"project.structure.side.proportion\": \"0.20379747\",\r\n    \"settings.editor.selected.configurable\": \"preferences.pluginManager\",\r\n    \"vue.rearranger.settings.migration\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RunManager\" selected=\"JUnit.acceptanceTest\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.Main\" />\r\n      <module name=\"Fitness\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"Feature: clientInteraction\" type=\"CucumberJavaRunConfigurationType\" factoryName=\"Cucumber java\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"CUCUMBER_CORE_VERSION\" value=\"5\" />\r\n      <option name=\"FILE_PATH\" value=\"$PROJECT_DIR$/src/test/java/Features/Instructor/clientInteraction.feature\" />\r\n      <option name=\"GLUE\" value=\"org.example.AcceptanceTest\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"io.cucumber.core.cli.Main\" />\r\n      <module name=\"Fitness\" />\r\n      <option name=\"PROGRAM_PARAMETERS\" value=\" --plugin org.jetbrains.plugins.cucumber.java.run.CucumberJvm5SMFormatter\" />\r\n      <option name=\"SUGGESTED_NAME\" value=\"Feature: clientInteraction\" />\r\n      <option name=\"WORKING_DIRECTORY\" value=\"$MODULE_WORKING_DIR$\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"io.cucumber.core.cli.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration name=\"acceptanceTest\" type=\"JUnit\" factoryName=\"JUnit\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <module name=\"Fitness\" />\r\n      <extension name=\"coverage\">\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.AcceptanceTest.*\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.AcceptanceTest.acceptanceTest\" />\r\n          <option name=\"ENABLED\" value=\"false\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Program\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Admin\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Article\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Client\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.ClientRepository\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Complaint\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Content\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.HealthTip\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Instructor\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.InstructorRepository\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Profile\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Program\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.ProgramManager\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.ProgramService\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.ProgressManager\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Recipe\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.Schedule\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.SubscriptionService\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n        <pattern>\r\n          <option name=\"PATTERN\" value=\"org.example.User\" />\r\n          <option name=\"ENABLED\" value=\"true\" />\r\n        </pattern>\r\n      </extension>\r\n      <option name=\"PACKAGE_NAME\" value=\"org.example.AcceptanceTest\" />\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"org.example.AcceptanceTest.acceptanceTest\" />\r\n      <option name=\"METHOD_NAME\" value=\"\" />\r\n      <option name=\"TEST_OBJECT\" value=\"class\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <list>\r\n      <item itemvalue=\"Application.Main\" />\r\n      <item itemvalue=\"Cucumber Java.Feature: clientInteraction\" />\r\n      <item itemvalue=\"JUnit.acceptanceTest\" />\r\n    </list>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"JUnit.acceptanceTest\" />\r\n        <item itemvalue=\"Application.Main\" />\r\n        <item itemvalue=\"Cucumber Java.Feature: clientInteraction\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"bundled-jdk-9823dce3aa75-28b599e66164-intellij.indexing.shared.core-IU-242.23339.11\" />\r\n        <option value=\"bundled-js-predefined-d6986cc7102b-5c90d61e3bab-JavaScript-IU-242.23339.11\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task id=\"LOCAL-00001\" summary=\"Admin testcode\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734620442002</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734620442002</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Admin test and production code\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734644545713</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734644545713</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"edit on programManagementStepTest\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734646611195</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734646611195</updated>\r\n    </task>\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"96ebe654-e637-4521-b05f-2ed7fce7b6f8\" name=\"Changes\" comment=\"edit on programManagementStepTest\" />\r\n      <created>1734650063351</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1734650063351</updated>\r\n      <workItem from=\"1734650065119\" duration=\"3975000\" />\r\n      <workItem from=\"1734702334331\" duration=\"2151000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"add depend. + finish a feature\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734688544556</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734688544556</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Admin testcode\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734689341616</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734689341616</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"editing the whole project\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734704132936</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734704132936</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00007\" summary=\"Admin production code #2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734717246337</created>\r\n      <option name=\"number\" value=\"00007\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734717246338</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00008\" summary=\"Admin complete feature #2\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734723340961</created>\r\n      <option name=\"number\" value=\"00008\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734723340961</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00009\" summary=\"admin 3rd feature (production code done)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1734728881715</created>\r\n      <option name=\"number\" value=\"00009\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1734728881715</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00010\" summary=\"Main Edit\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735930375111</created>\r\n      <option name=\"number\" value=\"00010\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735930375111</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00011\" summary=\"workspace\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735930831892</created>\r\n      <option name=\"number\" value=\"00011\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735930831892</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00012\" summary=\"sign in and sing out analysis\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735937620716</created>\r\n      <option name=\"number\" value=\"00012\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735937620716</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"sign in and sing out analysis\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1735942363557</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1735942363557</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"edit programMonitoring stepTest\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1736185789437</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1736185789438</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"15\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"OPEN_GENERIC_TABS\">\r\n      <map>\r\n        <entry key=\"e5912781-b57d-45f2-90dc-6c3f69a07d00\" value=\"TOOL_WINDOW\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"CUSTOM_BOOLEAN_PROPERTIES\">\r\n                <map>\r\n                  <entry key=\"Show.Git.Branches\" value=\"false\" />\r\n                </map>\r\n              </option>\r\n              <option name=\"HIGHLIGHTERS\">\r\n                <map>\r\n                  <entry key=\"MERGE_COMMITS\" value=\"true\" />\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n        <entry key=\"e5912781-b57d-45f2-90dc-6c3f69a07d00\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"Admin test and production code\" />\r\n    <MESSAGE value=\"edit on programManagementStepTest\" />\r\n    <MESSAGE value=\"add depend. + finish a feature\" />\r\n    <MESSAGE value=\"Admin testcode\" />\r\n    <MESSAGE value=\"editing the whole project\" />\r\n    <MESSAGE value=\"Admin production code #2\" />\r\n    <MESSAGE value=\"Admin complete feature #2\" />\r\n    <MESSAGE value=\"edit cucumber.html\" />\r\n    <MESSAGE value=\"admin 3rd feature (production code done)\" />\r\n    <MESSAGE value=\"Main Edit\" />\r\n    <MESSAGE value=\"workspace\" />\r\n    <MESSAGE value=\"sign in and sing out analysis\" />\r\n    <MESSAGE value=\"edit programMonitoring stepTest\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"edit programMonitoring stepTest\" />\r\n  </component>\r\n  <component name=\"XSLT-Support.FileAssociations.UIState\">\r\n    <expand />\r\n    <select />\r\n  </component>\r\n  <component name=\"com.intellij.coverage.CoverageDataManagerImpl\">\r\n    <SUITE FILE_PATH=\"coverage/Fitness$acceptanceTest.ic\" NAME=\"acceptanceTest Coverage Results\" MODIFIED=\"1736187483801\" SOURCE_PROVIDER=\"com.intellij.coverage.DefaultCoverageFileProvider\" RUNNER=\"idea\" COVERAGE_BY_TEST_ENABLED=\"false\" COVERAGE_TRACING_ENABLED=\"true\">\r\n      <FILTER>org.example.AcceptanceTest.*</FILTER>\r\n      <FILTER>org.example.Program</FILTER>\r\n      <FILTER>org.example.Admin</FILTER>\r\n      <FILTER>org.example.Article</FILTER>\r\n      <FILTER>org.example.Client</FILTER>\r\n      <FILTER>org.example.ClientRepository</FILTER>\r\n      <FILTER>org.example.Complaint</FILTER>\r\n      <FILTER>org.example.Content</FILTER>\r\n      <FILTER>org.example.HealthTip</FILTER>\r\n      <FILTER>org.example.Instructor</FILTER>\r\n      <FILTER>org.example.InstructorRepository</FILTER>\r\n      <FILTER>org.example.Profile</FILTER>\r\n      <FILTER>org.example.Program</FILTER>\r\n      <FILTER>org.example.ProgramManager</FILTER>\r\n      <FILTER>org.example.ProgramService</FILTER>\r\n      <FILTER>org.example.ProgressManager</FILTER>\r\n      <FILTER>org.example.Recipe</FILTER>\r\n      <FILTER>org.example.Schedule</FILTER>\r\n      <FILTER>org.example.SubscriptionService</FILTER>\r\n      <FILTER>org.example.User</FILTER>\r\n    </SUITE>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 1fe0670fed511332ac74986761b3d07c32658ac5)
+++ b/.idea/workspace.xml	(date 1736260747126)
@@ -4,8 +4,9 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="96ebe654-e637-4521-b05f-2ed7fce7b6f8" name="Changes" comment="edit programMonitoring stepTest">
+    <list default="true" id="96ebe654-e637-4521-b05f-2ed7fce7b6f8" name="Changes" comment="finish sing in &amp; up">
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/org/example/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/example/Main.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -14,6 +15,9 @@
   </component>
   <component name="CoverageOptionsProvider">
     <option name="myAddOrReplace" value="1" />
+  </component>
+  <component name="ExportToHTMLSettings">
+    <option name="OUTPUT_DIRECTORY" value="C:\Users\ASUS\IdeaProjects\Fitness\htmlReport" />
   </component>
   <component name="FileTemplateManagerImpl">
     <option name="RECENT_TEMPLATES">
@@ -23,7 +27,7 @@
     </option>
   </component>
   <component name="Git.Merge.Settings">
-    <option name="BRANCH" value="origin/Instructor" />
+    <option name="BRANCH" value="origin/Client" />
   </component>
   <component name="Git.Settings">
     <option name="RECENT_BRANCH_BY_REPOSITORY">
@@ -33,9 +37,9 @@
     </option>
     <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
   </component>
-  <component name="GitHubPullRequestSearchHistory"><![CDATA[{
-  "lastFilter": {}
-}]]></component>
+  <component name="GitHubPullRequestSearchHistory">{
+  &quot;lastFilter&quot;: {}
+}</component>
   <component name="GitHubPullRequestState">{
   &quot;prStates&quot;: [
     {
@@ -47,22 +51,27 @@
     }
   ]
 }</component>
-  <component name="GithubPullRequestsUISettings">{
-  &quot;selectedUrlAndAccountId&quot;: {
-    &quot;url&quot;: &quot;https://github.com/TalaAlhendi/SW-Project.git&quot;,
-    &quot;accountId&quot;: &quot;83da6505-7ab8-4b97-b7f8-45c77f0031ba&quot;
+  <component name="GithubPullRequestsUISettings"><![CDATA[{
+  "selectedUrlAndAccountId": {
+    "url": "https://github.com/SWProjectForFitnessProgram/SW-Project.git",
+    "accountId": "83da6505-7ab8-4b97-b7f8-45c77f0031ba"
   },
-  &quot;recentNewPullRequestHead&quot;: {
-    &quot;server&quot;: {
-      &quot;useHttp&quot;: false,
-      &quot;host&quot;: &quot;github.com&quot;,
-      &quot;port&quot;: null,
-      &quot;suffix&quot;: null
+  "recentNewPullRequestHead": {
+    "server": {
+      "useHttp": false,
+      "host": "github.com",
+      "port": null,
+      "suffix": null
     },
-    &quot;owner&quot;: &quot;TalaAlhendi&quot;,
-    &quot;repository&quot;: &quot;SW-Project&quot;
+    "owner": "TalaAlhendi",
+    "repository": "SW-Project"
   }
-}</component>
+}]]></component>
+  <component name="JavaAutoRunManager">
+    <enabled-run-configurations>
+      <run-configuration type="JUnit" name="acceptanceTest" />
+    </enabled-run-configurations>
+  </component>
   <component name="MarkdownSettingsMigration">
     <option name="stateVersion" value="1" />
   </component>
@@ -87,6 +96,7 @@
     "WebServerToolWindowFactoryState": "false",
     "git-widget-placeholder": "main",
     "kotlin-language-version-configured": "true",
+    "last_opened_file_path": "C:/Users/ASUS/IdeaProjects/Fitness",
     "node.js.detected.package.eslint": "true",
     "node.js.selected.package.eslint": "(autodetect)",
     "node.js.selected.package.tslint": "(autodetect)",
@@ -218,6 +228,22 @@
           <option name="PATTERN" value="org.example.User" />
           <option name="ENABLED" value="true" />
         </pattern>
+        <pattern>
+          <option name="PATTERN" value="org.example.AdminService" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+        <pattern>
+          <option name="PATTERN" value="org.example.UserStatus" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+        <pattern>
+          <option name="PATTERN" value="org.example.SubscriptionPlan" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+        <pattern>
+          <option name="PATTERN" value="org.example.Role" />
+          <option name="ENABLED" value="true" />
+        </pattern>
       </extension>
       <option name="PACKAGE_NAME" value="org.example.AcceptanceTest" />
       <option name="MAIN_CLASS_NAME" value="org.example.AcceptanceTest.acceptanceTest" />
@@ -371,7 +397,23 @@
       <option name="project" value="LOCAL" />
       <updated>1736185789438</updated>
     </task>
-    <option name="localTasksCounter" value="15" />
+    <task id="LOCAL-00015" summary="Coverage &amp; UML">
+      <option name="closed" value="true" />
+      <created>1736188575095</created>
+      <option name="number" value="00015" />
+      <option name="presentableId" value="LOCAL-00015" />
+      <option name="project" value="LOCAL" />
+      <updated>1736188575096</updated>
+    </task>
+    <task id="LOCAL-00016" summary="finish sing in &amp; up">
+      <option name="closed" value="true" />
+      <created>1736260729585</created>
+      <option name="number" value="00016" />
+      <option name="presentableId" value="LOCAL-00016" />
+      <option name="project" value="LOCAL" />
+      <updated>1736260729585</updated>
+    </task>
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -423,14 +465,27 @@
     <MESSAGE value="workspace" />
     <MESSAGE value="sign in and sing out analysis" />
     <MESSAGE value="edit programMonitoring stepTest" />
-    <option name="LAST_COMMIT_MESSAGE" value="edit programMonitoring stepTest" />
+    <MESSAGE value="Coverage &amp; UML" />
+    <MESSAGE value="finish sing in &amp; up" />
+    <option name="LAST_COMMIT_MESSAGE" value="finish sing in &amp; up" />
+  </component>
+  <component name="XDebuggerManager">
+    <breakpoint-manager>
+      <breakpoints>
+        <line-breakpoint enabled="true" type="java-line">
+          <url>mock:///AIAssistantSnippet.</url>
+          <line>2</line>
+          <option name="timeStamp" value="1" />
+        </line-breakpoint>
+      </breakpoints>
+    </breakpoint-manager>
   </component>
   <component name="XSLT-Support.FileAssociations.UIState">
     <expand />
     <select />
   </component>
   <component name="com.intellij.coverage.CoverageDataManagerImpl">
-    <SUITE FILE_PATH="coverage/Fitness$acceptanceTest.ic" NAME="acceptanceTest Coverage Results" MODIFIED="1736187483801" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
+    <SUITE FILE_PATH="coverage/Fitness$acceptanceTest.ic" NAME="acceptanceTest Coverage Results" MODIFIED="1736260633955" SOURCE_PROVIDER="com.intellij.coverage.DefaultCoverageFileProvider" RUNNER="idea" COVERAGE_BY_TEST_ENABLED="false" COVERAGE_TRACING_ENABLED="true">
       <FILTER>org.example.AcceptanceTest.*</FILTER>
       <FILTER>org.example.Program</FILTER>
       <FILTER>org.example.Admin</FILTER>
@@ -451,6 +506,10 @@
       <FILTER>org.example.Schedule</FILTER>
       <FILTER>org.example.SubscriptionService</FILTER>
       <FILTER>org.example.User</FILTER>
+      <FILTER>org.example.AdminService</FILTER>
+      <FILTER>org.example.UserStatus</FILTER>
+      <FILTER>org.example.SubscriptionPlan</FILTER>
+      <FILTER>org.example.Role</FILTER>
     </SUITE>
   </component>
 </project>
\ No newline at end of file
